Source: 2
Sink: 13

Adjacency Matrix:
0 0 49 69 98 62 0 0 0 0 0 0 0 0 0 0 0 14 0 0 
95 0 0 0 0 0 30 95 0 0 0 0 0 85 12 0 0 40 8 0 
37 0 0 0 59 0 0 90 0 15 45 61 0 91 0 0 0 0 0 5 
0 0 0 0 0 17 51 39 0 61 0 48 86 0 0 0 0 0 91 28 
0 0 0 0 0 0 0 0 82 0 70 59 4 29 13 0 0 0 0 0 
0 0 40 88 0 0 0 0 0 0 0 0 21 0 0 0 0 0 0 8 
0 0 0 93 0 15 0 0 0 0 0 20 0 0 99 0 61 83 0 0 
0 0 0 8 42 0 14 0 14 0 0 0 0 0 0 0 0 0 2 0 
72 0 45 0 63 29 0 0 0 0 0 72 20 0 0 54 12 93 0 0 
39 61 15 0 0 0 45 0 0 0 94 0 0 0 88 0 0 0 0 23 
0 0 0 0 0 0 0 81 0 0 0 0 0 0 44 0 37 90 0 0 
0 77 0 0 0 53 0 0 0 0 0 0 37 36 0 48 97 0 0 0 
68 31 54 0 0 0 0 0 73 0 0 0 0 5 0 0 0 0 0 0 
53 0 54 68 0 0 58 25 0 0 0 0 0 0 0 0 0 0 0 69 
0 0 0 0 0 0 0 0 53 0 72 0 0 0 0 47 0 0 0 45 
0 0 60 0 50 0 0 0 0 88 0 0 0 0 0 0 0 93 0 59 
0 0 79 0 0 61 44 0 0 24 0 60 0 0 0 0 0 0 0 18 
0 0 48 0 0 56 22 0 0 57 0 0 0 0 0 0 0 0 0 59 
13 9 90 0 0 0 0 71 0 0 0 0 19 0 22 0 0 0 0 0 
0 0 0 0 0 0 93 0 0 0 0 0 0 40 0 0 0 0 23 0 

===============================
Using BFS for Ford-Fulkerson Algorithm
===============================

Path Used: 2 -> 13 -> (Capacity: 91)
Path Used: 2 -> 4 -> 13 -> (Capacity: 29)
Path Used: 2 -> 11 -> 13 -> (Capacity: 36)
Path Used: 2 -> 19 -> 13 -> (Capacity: 5)
Path Used: 2 -> 4 -> 12 -> 13 -> (Capacity: 4)
Path Used: 2 -> 9 -> 1 -> 13 -> (Capacity: 15)
Path Used: 2 -> 11 -> 1 -> 13 -> (Capacity: 25)
Path Used: 2 -> 0 -> 3 -> 12 -> 13 -> (Capacity: 1)
Path Used: 2 -> 0 -> 3 -> 19 -> 13 -> (Capacity: 28)
Path Used: 2 -> 0 -> 5 -> 19 -> 13 -> (Capacity: 7)
Path Used: 2 -> 4 -> 11 -> 1 -> 13 -> (Capacity: 26)
Path Used: 2 -> 7 -> 18 -> 1 -> 13 -> (Capacity: 2)
Path Used: 2 -> 0 -> 3 -> 9 -> 1 -> 13 -> (Capacity: 1)
Path Used: 2 -> 7 -> 3 -> 9 -> 1 -> 13 -> (Capacity: 8)
Path Used: 2 -> 7 -> 4 -> 11 -> 1 -> 13 -> (Capacity: 8)

Final Residual Graph:
0 0 86 39 98 55 0 0 0 0 0 0 0 0 0 0 0 14 0 0
95 0 0 0 0 0 30 95 0 24 0 59 0 0 12 0 0 40 10 0
0 0 0 0 0 0 0 72 0 0 45 0 0 0 0 0 0 0 0 0
30 0 0 0 0 17 51 47 0 52 0 48 85 0 0 0 0 0 91 0 
0 0 59 0 0 0 0 8 82 0 70 25 0 0 13 0 0 0 0 0
7 0 40 88 0 0 0 0 0 0 0 0 21 0 0 0 0 0 0 1
0 0 0 93 0 15 0 0 0 0 0 20 0 0 99 0 61 83 0 0
0 0 18 0 34 0 14 0 14 0 0 0 0 0 0 0 0 0 0 0
72 0 45 0 63 29 0 0 0 0 0 72 20 0 0 54 12 93 0 0
39 37 30 9 0 0 45 0 0 0 94 0 0 0 88 0 0 0 0 23
0 0 0 0 0 0 0 81 0 0 0 0 0 0 44 0 37 90 0 0 
0 18 61 0 34 53 0 0 0 0 0 0 37 0 0 48 97 0 0 0
68 31 54 1 4 0 0 0 73 0 0 0 0 0 0 0 0 0 0 0
53 85 145 68 29 0 58 25 0 0 0 36 5 0 0 0 0 0 0 109
0 0 0 0 0 0 0 0 53 0 72 0 0 0 0 47 0 0 0 45
0 0 60 0 50 0 0 0 0 88 0 0 0 0 0 0 0 93 0 59
0 0 79 0 0 61 44 0 0 24 0 60 0 0 0 0 0 0 0 18
0 0 48 0 0 56 22 0 0 57 0 0 0 0 0 0 0 0 0 59 
13 7 90 0 0 0 0 73 0 0 0 0 19 0 22 0 0 0 0 0
0 0 5 28 0 7 93 0 0 0 0 0 0 0 0 0 0 0 23 0


Using BFS: Maximum possible flow: 286

===============================
Using DFS for Ford-Fulkerson Algorithm
===============================

Path Used: 2 -> 0 -> 3 -> 5 -> 12 -> 1 -> 6 -> 11 -> 13 -> (Capacity: 17)
Path Used: 2 -> 0 -> 3 -> 6 -> 1 -> 7 -> 4 -> 8 -> 5 -> 12 -> 13 -> (Capacity: 4)
Path Used: 2 -> 0 -> 3 -> 6 -> 1 -> 7 -> 4 -> 8 -> 5 -> 19 -> 13 -> (Capacity: 8)
Path Used: 2 -> 0 -> 3 -> 6 -> 1 -> 7 -> 4 -> 8 -> 11 -> 12 -> 13 -> (Capacity: 1)
Path Used: 2 -> 0 -> 3 -> 6 -> 1 -> 7 -> 4 -> 8 -> 11 -> 13 -> (Capacity: 4)
Path Used: 2 -> 0 -> 3 -> 6 -> 5 -> 8 -> 4 -> 7 -> 1 -> 12 -> 11 -> 13 -> (Capacity: 1)
Path Used: 2 -> 0 -> 3 -> 6 -> 5 -> 8 -> 4 -> 7 -> 1 -> 13 -> (Capacity: 2)
Path Used: 2 -> 4 -> 7 -> 1 -> 0 -> 3 -> 6 -> 5 -> 8 -> 11 -> 13 -> (Capacity: 9)
Path Used: 2 -> 4 -> 7 -> 1 -> 0 -> 3 -> 6 -> 11 -> 8 -> 15 -> 9 -> 10 -> 14 -> 19 -> 13 -> (Capacity: 3)
Path Used: 2 -> 4 -> 7 -> 1 -> 0 -> 3 -> 6 -> 14 -> 8 -> 11 -> 13 -> (Capacity: 2)
Path Used: 2 -> 4 -> 8 -> 0 -> 1 -> 6 -> 3 -> 7 -> 18 -> 14 -> 10 -> 9 -> 15 -> 17 -> 19 -> 13 -> (Capacity: 2)
Path Used: 2 -> 4 -> 8 -> 0 -> 1 -> 6 -> 3 -> 9 -> 10 -> 14 -> 15 -> 17 -> 19 -> 13 -> (Capacity: 12)
Path Used: 2 -> 4 -> 8 -> 0 -> 3 -> 6 -> 1 -> 13 -> (Capacity: 14)
Path Used: 2 -> 4 -> 8 -> 0 -> 3 -> 6 -> 14 -> 10 -> 9 -> 1 -> 13 -> (Capacity: 4)
Path Used: 2 -> 4 -> 8 -> 0 -> 5 -> 3 -> 6 -> 14 -> 10 -> 9 -> 1 -> 13 -> (Capacity: 9)
Path Used: 2 -> 4 -> 8 -> 0 -> 5 -> 3 -> 6 -> 14 -> 10 -> 16 -> 9 -> 1 -> 13 -> (Capacity: 4)
Path Used: 2 -> 7 -> 3 -> 0 -> 4 -> 8 -> 5 -> 6 -> 14 -> 10 -> 16 -> 9 -> 1 -> 13 -> (Capacity: 10)
Path Used: 2 -> 7 -> 4 -> 0 -> 3 -> 5 -> 6 -> 14 -> 8 -> 11 -> 1 -> 9 -> 10 -> 16 -> 19 -> 13 -> (Capacity: 2)
Path Used: 2 -> 7 -> 4 -> 0 -> 3 -> 5 -> 8 -> 11 -> 1 -> 6 -> 14 -> 10 -> 9 -> 15 -> 17 -> 19 -> 13 -> (Capacity: 1)
Path Used: 2 -> 7 -> 4 -> 0 -> 3 -> 5 -> 8 -> 11 -> 1 -> 6 -> 14 -> 10 -> 9 -> 16 -> 19 -> 13 -> (Capacity: 1)
Path Used: 2 -> 7 -> 4 -> 0 -> 3 -> 5 -> 8 -> 11 -> 1 -> 6 -> 14 -> 10 -> 16 -> 9 -> 19 -> 13 -> (Capacity: 6)
Path Used: 2 -> 7 -> 4 -> 8 -> 0 -> 5 -> 3 -> 9 -> 1 -> 6 -> 14 -> 10 -> 16 -> 11 -> 13 -> (Capacity: 3)
Path Used: 2 -> 7 -> 4 -> 8 -> 0 -> 5 -> 3 -> 9 -> 1 -> 6 -> 14 -> 10 -> 16 -> 11 -> 15 -> 17 -> 19 -> 13 -> (Capacity: 5)
Path Used: 2 -> 7 -> 4 -> 8 -> 0 -> 5 -> 3 -> 9 -> 1 -> 13 -> (Capacity: 5)
Path Used: 2 -> 7 -> 4 -> 10 -> 14 -> 6 -> 1 -> 13 -> (Capacity: 16)
Path Used: 2 -> 7 -> 4 -> 10 -> 14 -> 6 -> 3 -> 0 -> 5 -> 8 -> 11 -> 1 -> 13 -> (Capacity: 2)
Path Used: 2 -> 7 -> 4 -> 10 -> 14 -> 6 -> 3 -> 0 -> 8 -> 11 -> 1 -> 13 -> (Capacity: 1)
Path Used: 2 -> 7 -> 6 -> 3 -> 0 -> 4 -> 10 -> 14 -> 8 -> 11 -> 1 -> 13 -> (Capacity: 14)
Path Used: 2 -> 7 -> 8 -> 0 -> 3 -> 6 -> 14 -> 10 -> 4 -> 11 -> 1 -> 13 -> (Capacity: 4)
Path Used: 2 -> 7 -> 8 -> 0 -> 3 -> 6 -> 14 -> 10 -> 4 -> 13 -> (Capacity: 10)
Path Used: 2 -> 9 -> 0 -> 3 -> 6 -> 14 -> 8 -> 4 -> 13 -> (Capacity: 3)
Path Used: 2 -> 9 -> 0 -> 4 -> 13 -> (Capacity: 12)
Path Used: 2 -> 10 -> 4 -> 13 -> (Capacity: 4)
Path Used: 2 -> 13 -> (Capacity: 91)

Final Residual Graph:
0 0 86 0 72 34 0 0 71 15 0 0 0 0 0 0 0 14 0 0
95 0 0 0 0 0 30 95 0 38 0 31 16 0 12 0 0 40 8 0
0 0 0 0 0 0 0 10 0 0 41 61 0 0 0 0 0 0 0 5
69 0 0 0 0 16 0 47 0 36 0 48 86 0 0 0 0 0 91 28
26 0 59 0 0 0 0 42 3 0 55 55 4 0 13 0 0 0 0 0
28 0 40 89 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 144 0 15 0 14 0 0 0 0 0 0 54 0 61 83 0 0
0 0 80 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
1 0 45 0 142 29 0 14 0 0 0 32 20 0 21 51 12 93 0 0
24 23 30 25 0 0 45 0 0 0 94 0 0 0 88 0 19 0 0 17 
0 0 4 0 15 0 0 81 0 0 0 0 0 0 55 0 7 90 0 0
0 46 0 0 4 53 20 0 40 0 0 0 37 0 0 43 105 0 0 0
68 15 54 0 0 21 0 0 73 0 0 0 0 0 0 0 0 0 0 0
53 85 145 68 29 0 58 25 0 0 0 36 5 0 0 0 0 0 0 109
0 0 0 0 0 0 45 0 32 0 61 0 0 0 0 35 0 0 2 42
0 0 60 0 50 0 0 0 3 88 0 5 0 0 12 0 0 73 0 59
0 0 79 0 0 61 44 0 0 5 30 52 0 0 0 0 0 0 0 15 
0 0 48 0 0 56 22 0 0 57 0 0 0 0 0 20 0 0 0 39
13 9 90 0 0 0 0 73 0 0 0 0 19 0 20 0 0 0 0 0
0 0 0 0 0 8 93 0 0 6 0 0 0 0 3 0 3 20 23 0


Using DFS: Maximum possible flow: 286